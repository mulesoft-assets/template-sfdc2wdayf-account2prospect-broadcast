<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:workday="http://www.mulesoft.org/schema/mule/workday"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation=" http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/workday http://www.mulesoft.org/schema/mule/workday/current/mule-workday.xsd">

	<flow name="businessLogicFlow" doc:id="8759532e-79b7-4789-990c-dc8e162bfd67">
		<batch:job jobName="migrateObjectsBatch" doc:id="79b373e6-1aeb-43a9-9dfe-8ac0d2f31fdc">
			<batch:process-records>
				<batch:step name="getProspectFromWorkdayStep" doc:id="232087de-e311-49c1-a890-439c65ea1af2">
					<ee:transform doc:name="Prepare Get Prospects Request"
						doc:id="0e02f46c-ae8d-46ac-b5dc-57f0da276a19">
						<ee:message>
						</ee:message>
						<ee:variables>
							<ee:set-variable variableName="getProspectsRequest"><![CDATA[%dw 2.0
output application/xml
ns ns0 urn:com.workday/bsvc
---
{
	ns0#Get_Prospects_Request: {
		ns0#Request_Criteria: {
			ns0#Prospect_ID: payload.Id
		},
		ns0#Response_Group: {
			ns0#Include_Reference: true,
			ns0#Include_Prospect_Data: true
		}
	}
}]]></ee:set-variable>
						</ee:variables>
					</ee:transform>
					<workday:revenue-management operation="Get_Prospects" doc:name="Get prospects from Workday" doc:id="aa217b53-d0ef-44ca-91db-fe8a9cb7eb67" config-ref="Workday_Config_version_30" target="getProspectsResponse">
						<workday:content ><![CDATA[#[vars.getProspectsRequest]]]></workday:content>
					</workday:revenue-management>
					<ee:transform doc:name="Push reference id to payload"
						doc:id="0e44967e-228c-48ab-a08d-cf1036662e9e">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/java
ns ns0 urn:com.workday/bsvc
---

payload ++ {
	wdayfReferenceId: vars.getProspectsResponse.body.ns0#Get_Prospects_Response.ns0#Response_Data.ns0#Prospect[0].ns0#Prospect_Data.ns0#Prospect_ID
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
				</batch:step>
				<batch:step name="upsertProspectsInWorkdayStep" doc:id="78a74ab4-9b91-416d-985a-acda2ac377eb">
					<ee:transform doc:name="Prepare Put Prospect Request"
						doc:id="80b25c68-5026-44e4-b3fe-af1b593cb905">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/xml
ns ns0 urn:com.workday/bsvc

fun countryLookup(salesforceCountry) =
	if (salesforceCountry == 'USA') 'USA'
	else p('wdayf.country')

fun stateLookup(salesforceState) =
	if (salesforceState == 'CA') { state:'USA-CA' } else { state: p("wdayf.state") }

---
{
	ns0#Put_Prospect_Request: {
		(ns0#Prospect_Reference: {
			ns0#ID @(ns0#"type": "Prospect_Reference_ID"): payload.wdayfReferenceId
		}) if payload.wdayfReferenceId != null,
		ns0#Prospect_Data: {
			ns0#Prospect_ID: payload.Id,
			ns0#Prospect_Name: payload.Name,
			ns0#Prospect_Source_Reference: {
				ns0#ID @(ns0#"type": "External_Source_Code"): "SFDC"
			},
			ns0#Contact_Data: {
				ns0#Address_Data: {
					ns0#Country_Reference: {
						ns0#ID @(ns0#"type": "ISO_3166-1_Alpha-3_Code"): countryLookup(payload.BillingCountry)
					},
					ns0#Address_Line_Data @(ns0#Type: "ADDRESS_LINE_1"): payload.BillingStreet default p('wdayf.street'),
					ns0#Municipality: payload.BillingCity default p('wdayf.city'),
					ns0#Country_Region_Reference: {
						ns0#ID @(ns0#"type": "Country_Region_ID"): stateLookup(payload.BillingState).state default p('wdayf.state')
					},
					ns0#Postal_Code: payload.BillingPostalCode default p('wdayf.postalCode'),
					ns0#Usage_Data: {
						ns0#Type_Data @(ns0#Primary: true): {
							ns0#Type_Reference: {
								ns0#ID @(ns0#"type": "Communication_Usage_Type_ID"): "HOME"
							}
						}
					}
				},
				ns0#Phone_Data: {
					ns0#Phone_Number: payload.Phone default p('wdayf.phone'),
					ns0#Phone_Device_Type_Reference: {
						ns0#ID @(ns0#"type": "Phone_Device_Type_ID"): "1063.5"
					},
					ns0#Usage_Data: {
						ns0#Type_Data @(ns0#Primary: true): {
							ns0#Type_Reference: {
								ns0#ID @(ns0#"type": "Communication_Usage_Type_ID"): "HOME"
							}
						}
					}
				},
				(ns0#Web_Address_Data: {
					ns0#Web_Address: if (payload.Website matches /http(s)?:\/\/.*/) payload.Website
            	            else "http://" ++ payload.Website,
					ns0#Usage_Data: {
						ns0#Type_Data @(ns0#Primary: true): {
							ns0#Type_Reference: {
								ns0#ID @(ns0#"type": "Communication_Usage_Type_ID"): "HOME"
							}
						}
					}
				}) if payload.Website != null
			}
		}
	}
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<workday:revenue-management operation="Put_Prospect" doc:name="Upsert prospect" doc:id="1bb26589-10b3-48cb-8bfd-7fcf262778bf" config-ref="Workday_Config_version_30"/>
          
				</batch:step>
			</batch:process-records>
			<batch:on-complete>
				<ee:transform doc:name="Prepare migration result"
					doc:id="c84b4bc4-5a65-41c1-9d0c-f1ebd3d8db7a">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output text/plain
---
"Migration Report: \n"

++ "\n Time [milliseconds]: " 		++ payload.elapsedTimeInMillis!
++ "\n Total Records: "				++ payload.totalRecords!
++ "\n Successful Records: "		++ payload.successfulRecords!
++ "\n Failed Records: "			++ payload.failedRecords!
++ "\n Loaded Records: "			++ payload.loadedRecords!
++ "\n Processed Records: " 		++ payload.processedRecords!]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<logger level="INFO" doc:name="Migration process has finished!"
					doc:id="b7575d38-7dbd-4602-9186-1bbb25234896" message="Migration process has finished: #[payload]" />

			</batch:on-complete>
		</batch:job>
</flow>

</mule>


        
